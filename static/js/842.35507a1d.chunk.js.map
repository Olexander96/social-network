{"version":3,"file":"static/js/842.35507a1d.chunk.js","mappings":"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","sources":["webpack://1-project/./src/components/Profile/Profile.module.css?b512","webpack://1-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://1-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://1-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyNewPostReduxForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__njilw\",\"personal\":\"Profile_personal__fM1Mg\",\"info\":\"Profile_info__lhThD\"};","// extracted by mini-css-extract-plugin\nexport default {\"imageBlock\":\"ProfileInfo_imageBlock__BT9jw\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AO4M2\",\"profileStatus\":\"ProfileInfo_profileStatus__j6o9c\"};","import React, { useEffect, useState } from 'react';\r\nimport pi from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n        let [editMode, setEditMode] = useState(false);\r\n        let [currentStatus, setStatus] = useState(props.status);//тобто він примає значення початкове і в результаті setStatus може його міняти\r\n        useEffect(() => {\r\n            setStatus(props.status)\r\n        }, [props.status])\r\n\r\n        const activateEditMode = () => {\r\n            setEditMode(true)\r\n        };\r\n\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false); //перемикає режим редагування \r\n            props.updateUserStatus(currentStatus) //відправляє статус для запису на сервак\r\n        };\r\n\r\n        const onChangedStatus = (event) => { // коли ми пічатаємо статус то він записується в status\r\n            setStatus(event.currentTarget.value);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {editMode  \r\n                    ? <div>  \r\n                        <input \r\n                            autoFocus={ true } \r\n                            onBlur={ deactivateEditMode } // коли натиснув поза інпутом\r\n                            value={ currentStatus }\r\n                            onChange={ onChangedStatus }\r\n                        />\r\n                      </div>\r\n                    : <div>\r\n                        <span \r\n                            className={pi.profileStatus} \r\n                            onDoubleClick={ activateEditMode } \r\n                        >{ props.status || \"-------\"}</span>\r\n                      </div> //тут показуємо статус який прийде з стейта по API \r\n                }\r\n            </div>\r\n        )\r\n}\r\n    \r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport pi from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ( {profile, status, updateUserStatus} ) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    } \r\n    \r\n    return (\r\n            <div>\r\n                <div className={pi.descriptionBlock}>\r\n                    { profile.photos.large != null \r\n                        ? <img src = { profile.photos.large } alt='user-avatar'/>\r\n                        : <img src = { userPhoto } alt='user-avatar'/>\r\n                    }\r\n                    <div>\r\n                        <span>{ profile.fullName }</span>\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={ status } updateUserStatus = { updateUserStatus }/>\r\n                    <div>\r\n                        <span>{ profile.aboutMe }</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wd+99\"};","import React from 'react';\r\nimport p from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.item}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSY4JmSLi5dZYfNLYBW-LtPGbN4W571XtNMVQ&usqp=CAU\" alt=\"avatar\"/>\r\n            <span>{props.message}</span>\r\n            <span>likes {props.likesCount}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Tyn6L\",\"writePost\":\"MyPosts_writePost__YGPfE\",\"posts\":\"MyPosts_posts__W1RuA\"};","import React from \"react\";\r\nimport m from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst currentMaxLength  = maxLength(15); //бо на пряму не працює\r\n\r\nconst MyNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={ props.handleSubmit } className={m.writePost}>\r\n            <Field component={ Textarea } \r\n                    name={ \"newPost\" }\r\n                    validate={ [ required, currentMaxLength ] }   //всі функції які валідують\r\n                    placeholder='Post message'\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst MyNewPostReduxForm = reduxForm({form: \"post\"})(MyNewPostForm);\r\n\r\nexport default MyNewPostReduxForm;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport m from './MyPosts.module.css';\r\nimport MyNewPostReduxForm from './MyNewPostReduxForm';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) { // те саме що і PureComponent (аби це була класова компонента)\r\n    //     return nextProps !== this.props\r\n    // } //а для функцыональної використовуєм memo\r\n    \r\n        let postsElements = props.profilePage.posts.map(p => <Post message={p.message} key={p.id} likesCount= {p.likesCount}/>); // з кожним елементом масиву створили компоненту\r\n        \r\n        const onAddPost = (values) => {\r\n            props.addPost(values.newPost)\r\n        };\r\n\r\n        // console.log(\"RENDER\")\r\n        return (\r\n            <div className={m.postsBlock}>\r\n                <MyNewPostReduxForm onSubmit={ onAddPost } />\r\n                <div className={m.posts}>\r\n                    { postsElements }\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n};\r\n\r\n\r\nexport default React.memo(MyPosts)\r\n","import MyPosts from './MyPosts';\r\nimport { addPostCreator} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch( addPostCreator(newPost) )\r\n        }\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextCreator(text);\r\n        //     dispatch( action )\r\n        // }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={p.content}>\r\n            <ProfileInfo profile={ props.profile } status={ props.status } updateUserStatus = { props.updateUserStatus }/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer';\r\nimport wiAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../hoc/withRouter';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if (userId == null) {\r\n            userId = this.props.authorizedUserId; //мій авторизований профіль профіль\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\") //якщо нам не прийде інформація по буде профілю то редірект на логін сторінку\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId) //кріейтор санки\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateUserStatus = { this.props.updateUserStatus }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter,\r\n    wiAuthRedirect // HOC якщо не залогынений то редырект на вкладку login\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst wiAuthRedirect = (Component) => { // HOC компонента вищого порядку для редіректа\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>//якщо не залогынений то редырект на вкладку login\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); // для то щоб this.props.isAuth прокинути в цю компоненту\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\nexport default wiAuthRedirect;"],"names":["props","useState","editMode","setEditMode","status","currentStatus","setStatus","useEffect","autoFocus","onBlur","updateUserStatus","value","onChange","event","currentTarget","className","pi","onDoubleClick","_ref","profile","_jsx","children","_jsxs","photos","large","src","alt","userPhoto","fullName","ProfileStatusWithHooks","aboutMe","Preloader","p","message","likesCount","currentMaxLength","maxLength","reduxForm","form","onSubmit","handleSubmit","m","Field","component","Textarea","name","validate","required","placeholder","MyPosts","postsElements","profilePage","posts","map","Post","id","MyNewPostReduxForm","values","addPost","newPost","React","connect","state","dispatch","addPostCreator","ProfileContainer","userId","this","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","auth","isAuth","withRouter","wiAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}