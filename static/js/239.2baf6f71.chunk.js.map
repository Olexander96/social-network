{"version":3,"file":"static/js/239.2baf6f71.chunk.js","mappings":"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","sources":["assets/images/profile/edit-status-icon.svg","webpack://1-project/./src/components/Profile/Profile.module.css?b512","webpack://1-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","assets/images/profile/download-avatar-icon.svg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataEditForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://1-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://1-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyNewPostReduxForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/withAuthRedirect.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEditStatusIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 122.88 121.51\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"edit\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.66,1.64H58.88L44.46,16.71H28.66a13.52,13.52,0,0,0-9.59,4l0,0a13.52,13.52,0,0,0-4,9.59v76.14H91.21a13.5,13.5,0,0,0,9.59-4l0,0a13.5,13.5,0,0,0,4-9.59V77.3l15.07-15.74V92.85a28.6,28.6,0,0,1-8.41,20.22l0,.05a28.58,28.58,0,0,1-20.2,8.39H11.5a11.47,11.47,0,0,1-8.1-3.37l0,0A11.52,11.52,0,0,1,0,110V30.3A28.58,28.58,0,0,1,8.41,10.09L8.46,10a28.58,28.58,0,0,1,20.2-8.4ZM73,76.47l-29.42,6,4.25-31.31L73,76.47ZM57.13,41.68,96.3.91A2.74,2.74,0,0,1,99.69.38l22.48,21.76a2.39,2.39,0,0,1-.19,3.57L82.28,67,57.13,41.68Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEditStatusIcon);\nexport default __webpack_public_path__ + \"static/media/edit-status-icon.7ff23f91fd7ed019ce2894247aae6651.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__njilw\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AO4M2\",\"avatarBlock\":\"ProfileInfo_avatarBlock__Nm38g\",\"downloadIcon\":\"ProfileInfo_downloadIcon__3Q9Fj\",\"status\":\"ProfileInfo_status__qnPE3\",\"statusIcon\":\"ProfileInfo_statusIcon__WOwxZ\"};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDownloadAvatarIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    viewBox: \"0 0 512 342.06\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.14 2.64c50.45 8.83 86.48 38.5 110.54 83.1l4.51-.45c18.95-1.39 38.61 1.62 56.18 8.84 34.63 14.2 55.57 42.42 64.44 77.79 6.76 26.89 7.34 56.62-.79 83.27-12.47 41.01-42.09 62.32-81.01 75.68l-.42.13c-8.15 2.76-16.46 5.06-24.56 6.93-39.29 6.93-249.08 3.73-296.18.56l-2.4-.26c-8.02-1.07-15.95-2.77-23.54-5.15-35.34-11.01-60.51-35.03-72.13-70.51-7.96-24.36-7.56-50.6.37-74.93 6.68-20.46 16.3-34.33 29.63-44.85 15.76-12.45 37.62-20.69 57.19-26.21C115.68 34.94 187.54-11.94 271.14 2.64zm55.11 186.93c5.19.22 8.87 1.94 11 5.17 5.77 8.66-2.11 17.21-7.58 23.23l-67.7 59.77c-5.8 6.41-14.06 6.41-19.86 0l-61.25-61.4c-5.11-5.77-11.43-13.62-6.12-21.6 2.19-3.23 5.83-4.95 11.01-5.17h34.9v-55.43c0-7.86 6.47-14.37 14.36-14.37h41.98c7.89 0 14.35 6.7 14.35 14.37v55.43h34.91z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownloadAvatarIcon);\nexport default __webpack_public_path__ + \"static/media/download-avatar-icon.6c0f5e3bc3d53bed2b26c78f7193d91c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport { ReactComponent as EditStatusIcon } from '../../../assets/images/profile/edit-status-icon.svg';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n        let [editMode, setEditMode] = useState(false);\r\n        let [currentStatus, setStatus] = useState(props.status);//тобто він примає значення початкове і в результаті setStatus може його міняти\r\n        useEffect(() => {\r\n            setStatus(props.status)\r\n        }, [props.status])\r\n\r\n        const activateEditMode = () => {\r\n            setEditMode(true)\r\n        };\r\n\r\n        const deactivateEditMode = () => {\r\n            setEditMode(false); //перемикає режим редагування \r\n            props.updateUserStatus(currentStatus) //відправляє статус для запису на сервак\r\n        };\r\n\r\n        const onChangedStatus = (event) => { // коли ми пічатаємо статус то він записується в status\r\n            setStatus(event.currentTarget.value);\r\n        };\r\n\r\n        return (\r\n            <div className= {styles.status}>\r\n                {editMode  \r\n                    ? <input \r\n                            autoFocus={ true } \r\n                            onBlur={ deactivateEditMode } // коли натиснув поза інпутом\r\n                            value={ currentStatus }\r\n                            onChange={ onChangedStatus }\r\n                        />\r\n                     \r\n                    : <div>\r\n                        <span>{ props.status || \"-------\"}</span>\r\n                        <EditStatusIcon onClick={ activateEditMode } className={styles.statusIcon}/>\r\n                      </div>//тут показуємо статус який прийде з стейта по API \r\n                }\r\n            </div>\r\n        )\r\n}\r\n    \r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileData =( {profile, isOwner, activateEditMode} ) => {\r\n    return (\r\n        <div>\r\n            { isOwner ? <button onClick={ activateEditMode }>Edit</button> : null }\r\n            <div>\r\n                <span>Full name: { profile.fullName }</span>\r\n            </div>\r\n            <div>\r\n                <span>About me: { profile.aboutMe }</span>\r\n            </div>\r\n            <div>\r\n                <span>Looking for a job: { profile.lookingForAJob ? \"yes\" : \"no\" }</span>\r\n            </div>\r\n            {\r\n            profile.lookingForAJob\r\n                ? <div>\r\n                    <span>My professional skills: { profile.lookingForAJobDescription }</span>\r\n                </div> \r\n                : null\r\n            }\r\n            <div>\r\n                <span>Contacts: { Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key= {key} contactTitle = {key} contactValue = {profile.contacts[key]}/>\r\n                })}</span>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst Contact = ( {contactTitle, contactValue} ) => {\r\n    return (\r\n        <div className={styles.contactItem}>{ contactTitle }: { contactValue }</div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React from \"react\";\r\nimport { Textarea, createField } from \"../../common/FormControls/FormControls\";\r\nimport { Input } from \"../../common/FormControls/FormControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport formStyles from \"../../common/FormControls/FormControls.module.css\";\r\n\r\nconst ProfileDataEditForm = ( {handleSubmit, profile, error, editModeStatus} ) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <button >Save</button>\r\n            {error ? <div className={ formStyles.formErrorSummary }>{ error }</div> : null} \r\n            <div>\r\n                <span>Full name:</span>\r\n                { createField( Input, \"Full name\", \"fullName\", []) }\r\n            </div>\r\n            <div>\r\n                <span>About me:</span>\r\n                { createField( Textarea, \"About me\", \"aboutMe\", []) }\r\n            </div>\r\n            <div>\r\n                <span>Looking for a job:</span>\r\n                { createField( Input, \"\", \"lookingForAJob\", [], {type: \"checkbox\"}) }\r\n            </div>\r\n            <div>\r\n                <span>My professional skills:</span>\r\n                { createField( Textarea, \"My professional skills\", \"lookingForAJobDescription\", []) }\r\n            </div> \r\n            <div>\r\n                <span>Contacts: { Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div className={styles.contactItem} key={key}>\r\n                            <span>{key}</span>\r\n                            { createField(Input, key, \"contacts.\" + key, []) }\r\n                        </div>\r\n                    )\r\n                })}</span>\r\n            </div>\r\n        </form>\r\n    ) \r\n}\r\n\r\nconst ProfileDataEditReduxForm = reduxForm({form: \"profile-form\"})(ProfileDataEditForm)\r\n\r\nexport default ProfileDataEditReduxForm;\r\n","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport styles from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileData from './ProfileData';\r\nimport ProfileDataEditForm from './ProfileDataEditForm';\r\nimport { ReactComponent as DownloadImage } from '../../../assets/images/profile/download-avatar-icon.svg';\r\n\r\n\r\nconst ProfileInfo = ( {profile, status, updateUserStatus, isOwner, savePhoto, saveProfileFormData, editModeStatus} ) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const sendPhotoToServer = (event) => {\r\n        if (event.target.files.length) {\r\n            savePhoto(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfileFormData(formData)\r\n        if (editModeStatus === \"SUCCESS\")  {\r\n            setEditMode(false)\r\n        }\r\n    };\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    } \r\n    return (\r\n            <div>\r\n                <div className={styles.descriptionBlock}>\r\n                    <div className={ styles.avatarBlock }>\r\n                        <img src = { profile.photos.large || userPhoto } alt='user-avatar'/>\r\n                        {isOwner \r\n                            ? <label>\r\n                                    <DownloadImage className={ styles.downloadIcon}/>\r\n                                    {/* change image */}\r\n                                    <input type='file' onChange={ sendPhotoToServer }/>\r\n                              </label>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={ status } updateUserStatus = { updateUserStatus }/>\r\n                    <div className={styles.profileDataBlock}>\r\n                        <h1>Profile info:</h1>\r\n                        {editMode \r\n                            ? <ProfileDataEditForm initialValues={ profile } //initialValues це вбудована ф-ція в redux-form-state яка дозволяє передати значення які до нас прийшли в режим редагування інпута\r\n                                onSubmit={ onSubmit } \r\n                                profile = { profile }\r\n                                editModeStatus = {editModeStatus}\r\n                            /> \r\n                            : <ProfileData profile = { profile } \r\n                                isOwner = { isOwner }\r\n                                activateEditMode = {() => { setEditMode(true) }}\r\n                            />  \r\n                        }\r\n                    </div> \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wd+99\"};","import React from 'react';\r\nimport p from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={p.item}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSY4JmSLi5dZYfNLYBW-LtPGbN4W571XtNMVQ&usqp=CAU\" alt=\"avatar\"/>\r\n            <span>{props.message}</span>\r\n            <span>likes {props.likesCount}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Tyn6L\",\"writePost\":\"MyPosts_writePost__YGPfE\",\"posts\":\"MyPosts_posts__W1RuA\"};","import React from \"react\";\r\nimport m from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst currentMaxLength  = maxLength(15); //бо на пряму не працює\r\n\r\nconst MyNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={ props.handleSubmit } className={m.writePost}>\r\n            <Field component={ Textarea } \r\n                    name={ \"newPost\" }\r\n                    validate={ [ required, currentMaxLength ] }   //всі функції які валідують\r\n                    placeholder='Post message'\r\n            />\r\n            <div>\r\n                <button>Add Post</button>\r\n                <button>Remove Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst MyNewPostReduxForm = reduxForm({form: \"post\"})(MyNewPostForm);\r\n\r\nexport default MyNewPostReduxForm;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport m from './MyPosts.module.css';\r\nimport MyNewPostReduxForm from './MyNewPostReduxForm';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) { // те саме що і PureComponent (аби це була класова компонента)\r\n    //     return nextProps !== this.props\r\n    // } //а для функцыональної використовуєм memo\r\n    \r\n        let postsElements = props.profilePage.posts.map(p => <Post message={p.message} key={p.id} likesCount= {p.likesCount}/>); // з кожним елементом масиву створили компоненту\r\n        \r\n        const onAddPost = (values) => {\r\n            props.addPost(values.newPost)\r\n        };\r\n\r\n        // console.log(\"RENDER\")\r\n        return (\r\n            <div className={m.postsBlock}>\r\n                <MyNewPostReduxForm onSubmit={ onAddPost } />\r\n                <div className={m.posts}>\r\n                    { postsElements }\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n};\r\n\r\n\r\nexport default React.memo(MyPosts)\r\n","import MyPosts from './MyPosts';\r\nimport { addPostCreator} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch( addPostCreator(newPost) )\r\n        }\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextCreator(text);\r\n        //     dispatch( action )\r\n        // }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.content}>\r\n            <ProfileInfo className={ styles.ProfileInfo } profile={ props.profile } \r\n                status={ props.status } \r\n                updateUserStatus = { props.updateUserStatus }\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfileFormData = {props.saveProfileFormData}\r\n                editModeStatus = {props.editModeStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileFormData } from '../../redux/profile-reducer';\r\nimport wiAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../hoc/withRouter';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.params.userId;\r\n        if (userId == null) {\r\n            userId = this.props.authorizedUserId; //мій авторизований профіль профіль\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\") //якщо нам не прийде інформація по буде профілю то редірект на логін сторінку\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId) //кріейтор санки\r\n        this.props.getUserStatus(userId)\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (this.props.params.userId !== prevProps.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateUserStatus = { this.props.updateUserStatus }\r\n                isOwner = {!this.props.params.userId}\r\n                savePhoto =  { this.props.savePhoto }\r\n                saveProfileFormData = {this.props.saveProfileFormData}\r\n                editModeStatus = {this.props.editModeStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        editModeStatus: state.profilePage.editModeStatus\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileFormData}),\r\n    withRouter,\r\n    wiAuthRedirect // HOC якщо не залогынений то редырект на вкладку login\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst wiAuthRedirect = (Component) => { // HOC компонента вищого порядку для редіректа\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>//якщо не залогынений то редырект на вкладку login\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); // для то щоб this.props.isAuth прокинути в цю компоненту\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\nexport default wiAuthRedirect;"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgEditStatusIcon","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","undefined","d","ForwardRef","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","currentStatus","setStatus","useEffect","_jsx","className","styles","children","autoFocus","onBlur","updateUserStatus","value","onChange","event","currentTarget","_jsxs","EditStatusIcon","onClick","Contact","_ref2","contactTitle","contactValue","profile","isOwner","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","map","reduxForm","form","handleSubmit","error","editModeStatus","onSubmit","formStyles","createField","Input","Textarea","type","SvgDownloadAvatarIcon","shapeRendering","textRendering","imageRendering","fillRule","clipRule","savePhoto","saveProfileFormData","src","photos","large","userPhoto","alt","DownloadImage","files","ProfileStatusWithHooks","ProfileDataEditForm","initialValues","formData","ProfileData","Preloader","p","message","likesCount","currentMaxLength","maxLength","m","Field","component","name","validate","required","placeholder","MyPosts","postsElements","profilePage","posts","Post","MyNewPostReduxForm","values","addPost","newPost","React","connect","state","dispatch","addPostCreator","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","userId","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","Profile","_objectSpread","compose","auth","isAuth","withRouter","wiAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}